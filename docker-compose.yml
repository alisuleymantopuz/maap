version: '3.4'
services:
    rabbitmq:
        image: 'rabbitmq:3-management'
        container_name: rabbitmq
        volumes:
            - 'rabbitmqdata:/var/lib/rabbitmq'
        ports:
            - '15672:15672'
            - '5672:5672'
        environment:
            - RABBITMQ_DEFAULT_USER=rabbitmquser
            - RABBITMQ_DEFAULT_PASS=DEBmbwkSrzy9D1T9cJfa
    sqlserver:
        image: 'microsoft/mssql-server-linux:latest'
        container_name: sqlserver
        volumes:
            - 'sqlserverdata:/var/opt/mssql'
        ports:
            - '1434:1433'
        environment:
            - ACCEPT_EULA=Y
            - MSSQL_PID=Developer
            - SA_PASSWORD=8jkGh47hnDw89Haq8LN2
    mailserver:
        image: djfarrelly/maildev
        container_name: mailserver
        ports:
            - '25:25'
            - '4000:80'
    logserver:
        image: 'datalust/seq:latest'
        container_name: logserver
        ports:
            - '5341:80'
        environment:
            - ACCEPT_EULA=Y
    vehiclemanagementapi:
        image: '${DOCKER_REGISTRY-}vehiclemanagementapi'
        build:
            context: .
            dockerfile: vehicleManagementAPI/Dockerfile
        depends_on:
            - rabbitmq
            - sqlserver
        ports:
            - '5000'
        environment:
            - ASPNETCORE_ENVIRONMENT=Production
    customermanagementapi:
        image: '${DOCKER_REGISTRY-}customermanagementapi'
        build:
            context: .
            dockerfile: customerManagementAPI/Dockerfile
        depends_on:
            - rabbitmq
            - sqlserver
        ports:
            - '5100'
        environment:
            - ASPNETCORE_ENVIRONMENT=Production
    workshopmanagementapi:
        image: '${DOCKER_REGISTRY-}workshopmanagementapi'
        build:
            context: .
            dockerfile: workshopManagementAPI/Dockerfile
        depends_on:
            - rabbitmq
            - sqlserver
        ports:
            - '5200'
        environment:
            - ASPNETCORE_ENVIRONMENT=Production
    auditlogservice:
        image: '${DOCKER_REGISTRY-}auditlogservice'
        build:
            context: .
            dockerfile: auditLogService/Dockerfile
        container_name: auditlogservice
        depends_on:
            - rabbitmq
        environment:
            - DOTNET_ENVIRONMENT=Production
    invoiceservice:
        image: '${DOCKER_REGISTRY-}invoiceservice'
        build:
            context: .
            dockerfile: invoiceService/Dockerfile
        container_name: invoiceservice
        depends_on:
            - rabbitmq
            - sqlserver
            - mailserver
        environment:
            - DOTNET_ENVIRONMENT=Production
    notificationservice:
        image: '${DOCKER_REGISTRY-}notificationservice'
        build:
            context: .
            dockerfile: notificationService/Dockerfile
        container_name: notificationservice
        depends_on:
            - rabbitmq
            - sqlserver
            - mailserver
        environment:
            - DOTNET_ENVIRONMENT=Production
    timeservice:
        image: '${DOCKER_REGISTRY-}timeservice'
        build:
            context: .
            dockerfile: timeService/Dockerfile
        container_name: timeservice
        depends_on:
            - rabbitmq
        environment:
            - DOTNET_ENVIRONMENT=Production
    workshopmanagementeventhandler:
        image: '${DOCKER_REGISTRY-}workshopmanagementeventhandler'
        build:
            context: .
            dockerfile: workshopManagementEventHandler/Dockerfile
        container_name: workshopmanagementeventhandler
        depends_on:
            - rabbitmq
            - sqlserver
        environment:
            - DOTNET_ENVIRONMENT=Production
    webapp:
        image: '${DOCKER_REGISTRY-}webapp'
        build:
            context: .
            dockerfile: WebApp/Dockerfile
        container_name: webapp
        depends_on:
            - customermanagementapi
            - vehiclemanagementapi
            - workshopmanagementapi
        ports:
            - '7000:7000'
        environment:
            - ASPNETCORE_ENVIRONMENT=Production
volumes:
    sqlserverdata:
        external: true
    rabbitmqdata:
        external: true